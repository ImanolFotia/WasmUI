var getPointer=function(e,t){return new Uint32Array(WasmContext.memory,e,t)},getColor=function(e,t,r){return new Uint32Array(e,t,r)};let WasmWindow={width:0,height:0};var PrimitiveTopologyName=["point-list","line-list","line-strip","triangle-list","triangle-strip",],PrimitiveTopologyMap=[{"point-list":0},{"line-list":1},{"line-strip":2},{"triangle-list":3},{"triangle-strip":4},],CompareFunctionName=["never","less","equal","less-equal","greater","not-equal","greater-equal","always",],LoadOpName=["clear","load",],SamplerBindingType=["filtering","non-filtering","comparison"],LoadOpMap=[{clear:0},{load:1},],StoreOpName=["store","discard"],StoreOpMap=[{store:0},{discard:1},],BufferUsageName=["map_read","map_write","copy_src","copy_dst","index","vertex","uniform","storage","indirect","query_resolve","blas_input","tlas_input"],bufferBindingTypeName=["uniform","storage","read-only-storage",],TextureFormatName=["none","r8unorm","r8snorm","r8uint","r8sint","r16uint","r16sint","r16unorm","r16snorm","r16float","rg8unorm","rg8snorm","rg8uint","rg8sint","r32uint","r32sint","r32float","rg16uint","rg16sint","rg16unorm","rg16snorm","rg16float","rgba8unorm","rgba8unormsrgb","rgba8snorm","rgba8uint","rgba8sint","bgra8unorm","bgra8unormsrgb","rgb9e5ufloat","rgb10a2uint","rgb10a2unorm","rg11b10ufloat","rg32uint","rg32sint","rg32float","rgba16uint","rgba16sint","rgba16unorm","rgba16snorm","rgba16float","rgba32uint","rgba32sint","rgba32float","stencil8","depth16unorm","depth24plus","depth24plusstencil8","depth32float","depth32floatstencil8","nv12","bc1rgbaunorm","bc1rgbaunormsrgb","bc2rgbaunorm","bc2rgbaunormsrgb","bc3rgbaunorm","bc3rgbaunormsrgb","bc4runorm","bc4rsnorm","bc5rgunorm","bc5rgsnorm","bc6hrgbufloat","bc6hrgbfloat","bc7rgbaunorm","bc7rgbaunormsrgb","etc2rgb8unorm","etc2rgb8unormsrgb","etc2rgb8a1unorm","etc2rgb8a1unormsrgb","etc2rgba8unorm","etc2rgba8unormsrgb","eacr11unorm","eacr11snorm","eacrg11unorm","eacrg11snorm","astcblock","astcchannel"],TextureSampleType=["float","unfilterable_float","depth","sint","uint"],TextureViewDimension=["1d","2d","3d"],VertexFormatName=["uint8x2","uint8x4","sint8x2","sint8x4","unorm8x2","unorm8x4","snorm8x2","snorm8x4","uint16x2","uint16x4","sint16x2","sint16x4","unorm16x2","unorm16x4","snorm16x2","snorm16x4","float16x2","float16x4","float32","float32x2","float32x3","float32x4","uint32","uint32x2","uint32x3","uint32x4","sint32","sint32x2","sint32x3","sint32x4","float64","float64x2","float64x3","float64x4","unorm10_10_10_2",],DimensionName=["1d","2d","3d"],AddressMode=["clamp-to-edge","repeat","mirror-repeat","clamp-to-border",],SamplerBorderColor=["none","transparent-black","opaque-black","opaque-white","zero",],FilterMode=["nearest","linear",],iota=0,TextureFormatMap={none:iota++,r8unorm:iota++,r8snorm:iota++,r8uint:iota++,r8sint:iota++,r16uint:iota++,r16sint:iota++,r16unorm:iota++,r16snorm:iota++,r16float:iota++,rg8unorm:iota++,rg8snorm:iota++,rg8uint:iota++,rg8sint:iota++,r32uint:iota++,r32sint:iota++,r32float:iota++,rg16uint:iota++,rg16sint:iota++,rg16unorm:iota++,rg16snorm:iota++,rg16float:iota++,rgba8unorm:iota++,rgba8unormsrgb:iota++,rgba8snorm:iota++,rgba8uint:iota++,rgba8sint:iota++,bgra8unorm:iota++,bgra8unormsrgb:iota++,rgb9e5ufloat:iota++,rgb10a2uint:iota++,rgb10a2unorm:iota++,rg11b10ufloat:iota++,rg32uint:iota++,rg32sint:iota++,rg32float:iota++,rgba16uint:iota++,rgba16sint:iota++,rgba16unorm:iota++,rgba16snorm:iota++,rgba16float:iota++,rgba32uint:iota++,rgba32sint:iota++,rgba32float:iota++,stencil8:iota++,depth16unorm:iota++,depth24plus:iota++,depth24plusstencil8:iota++,depth32float:iota++,depth32floatstencil8:iota++,nv12:iota++,bc1rgbaunorm:iota++,bc1rgbaunormsrgb:iota++,bc2rgbaunorm:iota++,bc2rgbaunormsrgb:iota++,bc3rgbaunorm:iota++,bc3rgbaunormsrgb:iota++,bc4runorm:iota++,bc4rsnorm:iota++,bc5rgunorm:iota++,bc5rgsnorm:iota++,bc6hrgbufloat:iota++,bc6hrgbfloat:iota++,bc7rgbaunorm:iota++,bc7rgbaunormsrgb:iota++,etc2rgb8unorm:iota++,etc2rgb8unormsrgb:iota++,etc2rgb8a1unorm:iota++,etc2rgb8a1unormsrgb:iota++,etc2rgba8unorm:iota++,etc2rgba8unormsrgb:iota++,eacr11unorm:iota++,eacr11snorm:iota++,eacrg11unorm:iota++,eacrg11snorm:iota++,astcblock:iota++,astcchannel:iota++};iota=0;var C_STRUCT={RenderTarget:4,VertexAttribute:12,VertexBufferLayout:16,VertexState:40,BlendComponent:12,BlendState:24,ColorTargetState:32,FragmentState:40,BufferBindingLayout:4,PushConstantRange:12,BindGroupLayoutDescriptor:40,PipelineLayoutDescriptor:16,PrimitiveState:28,StencilFaceState:16,DepthBiasState:12,DepthStencilState:64,MultiSampleState:12,RenderPipelineDescriptor:208,Operations:8,RenderPassColorAttachment:40,RenderPassDepthStencilAttachment:32,RenderPassTimestampWrites:16,RenderPassDescriptor:56,BufferDescriptor:24,BindGroupLayoutEntry:24,BindGroupLayoutDescriptor:8,BindGroupDescriptor:12,BindGroupEntry:12,BindingResource:20,TextureDescriptor:32,SamplerDescriptor:44};let wgpuGetDevice=function(){return GlobalGPUContext.register(GlobalGPUContext.device)},wgpuCreateRenderPipeline=function(e,t){let r=GlobalGPUContext.get(e).object,o=getPipelineCreationInfo(t),n;"none"!=o.depthStencil.format&&(n={depthWriteEnabled:o.depthStencil.depthWriteEnabled,depthCompare:o.depthStencil.depthCompare,format:o.depthStencil.format});try{return GlobalGPUContext.register(r.createRenderPipeline({layout:o.layout,vertex:{module:GlobalGPUContext.get(o.vertex.module).object,entryPoint:o.vertex.entry_point,buffers:o.vertex.buffers},fragment:{module:GlobalGPUContext.get(o.fragment.module).object,entryPoint:o.fragment.entry_point,targets:o.fragment.targets},primitive:{topology:o.primitive.topology,cullMode:"back"},depthStencil:n}))}catch(a){console.error("An error has ocurred:",a),abort()}},wgpuDeviceCreateBindGroupLayout=function(e,t){let r=GlobalGPUContext.get(e).object,o=getPointer(t,C_STRUCT.BindGroupLayoutDescriptor),n=o[0],a=getPointer(o[1],n*C_STRUCT.BindGroupLayoutEntry),i=[];for(var l=0;l<n;l++){let u={};var s=6*l;u.binding=a[s+0],u.visibility=a[s+1],0!=a[s+2]?u.buffer=getBufferEntry(a[s+2]):0!=a[s+3]?u.sampler=getSamplerEntry(a[s+3]):0!=a[s+4]&&(u.texture=getTextureEntry(a[s+4])),i.push(u)}return GlobalGPUContext.register(r.createBindGroupLayout({entries:i}))},wgpuReleaseBindGroupLayout=function(e){GlobalGPUContext.release(e)},wgpuReleasePipelineLayout=function(e){GlobalGPUContext.release(e)};function getBufferEntry(e){var t=getPointer(e,12);return{type:bufferBindingTypeName[t[0]],hasDynamicOffset:t[1],minBindingSize:t[2]}}function getSamplerEntry(e){return{type:SamplerBindingType[getPointer(e,4)[0]]}}function getTextureEntry(e){var t=getPointer(e,12);return{sampleType:TextureSampleType[t[0]],viewDimension:TextureViewDimension[t[1]],multisampled:0!=t[2]}}let wgpuGetPreferredCanvasFormat=function(){return TextureFormatMap[navigator.gpu.getPreferredCanvasFormat().toString()]},wgpuCreateShaderModule=function(e,t){let r=getString(t),o=GlobalGPUContext.get(e).object;return null==o?(console.error("device is null"),-1):GlobalGPUContext.register(o.createShaderModule({code:r}))},wgpuCreateCommandEncoder=function(e){return GlobalGPUContext.register(GlobalGPUContext.get(e).object.createCommandEncoder())},wgpuSwapChainGetCurrentTextureView=function(){return GlobalGPUContext.register(GlobalGPUContext.context.getCurrentTexture().createView())},wgpuCreateTextureView=function(e,t){let r=GlobalGPUContext.get(e).object;return GlobalGPUContext.register(r.createView())},wgpuCommandEncoderBeginRenderPass=function(e,t){var r=getRenderPassDescriptor(t),o=GlobalGPUContext.get(e).object;return GlobalGPUContext.register(o.beginRenderPass(r))},wgpuRenderPassEncoderSetPipeline=function(e,t){var r=GlobalGPUContext.get(e).object,o=GlobalGPUContext.get(t).object;r.setPipeline(o)},wgpuRenderPassEncoderSetBindGroup=function(e,t,r,o,n){var a=GlobalGPUContext.get(e).object,i=GlobalGPUContext.get(r).object;a.setBindGroup(t,i)},wgpuRenderPassEncoderDraw=function(e,t){GlobalGPUContext.get(e).object.draw(t)},wgpuRenderPassEncoderEnd=function(e){GlobalGPUContext.get(e).object.end()},wgpuDeviceGetQueue=function(e){return GlobalGPUContext.register(GlobalGPUContext.get(e).object.queue)},wgpuCommandEncoderFinish=function(e){let t=GlobalGPUContext.get(e).object;return GlobalGPUContext.register(t.finish())},wgpuTextureViewRelease=function(e){GlobalGPUContext.release(e)},wgpuCommandEncoderRelease=function(e){GlobalGPUContext.release(e)},wgpuRenderPassEncoderRelease=function(e){GlobalGPUContext.release(e)},wgpuCommandBufferRelease=function(e){GlobalGPUContext.release(e)},wgpuQueueSubmit=function(e,t,r){let o=GlobalGPUContext.get(e).object,n=GlobalGPUContext.get(r).object;o.submit([n])},wgpuCreateBuffer=function(e,t){return GlobalGPUContext.register(GlobalGPUContext.get(e).object.createBuffer(getBufferDescriptor(t)))},wgpuBufferGetMappedRange=function(e,t,r){let o=GlobalGPUContext.get(e);var n=o.object.getMappedRange(t,r),a=WasmContext.exports.alloc_arena(WasmContext.exports.transfer_arena,r);return o.onUnmap=function(){var e=new Uint8Array(WasmContext.memory);new Uint8Array(n).set(e.subarray(a,a+n.byteLength)),WasmContext.exports.reset_arena(a)},a},wgpuBufferUnmap=function(e){let t=GlobalGPUContext.get(e);t.onUnmap(),t.object.unmap()},wgpuBufferMappedRangeRelease=function(e){return GlobalGPUContext.release(e)},wgpuDestroyBuffer=function(e){GlobalGPUContext.get(e).object.destroy(),GlobalGPUContext.release(e)},wgpuRenderPassEncoderSetVertexBuffer=function(e,t,r,o,n){let a=GlobalGPUContext.get(r).object;GlobalGPUContext.get(e).object.setVertexBuffer(t,a,o,n)},wgpuCreatePipelineLayout=function(e,t){let r=GlobalGPUContext.get(e).object;return layout_descriptor=getPipelineLayoutDescriptor(getPointer(t,C_STRUCT.PipelineLayoutDescriptor)),GlobalGPUContext.register(r.createPipelineLayout(layout_descriptor))},wgpuCreateBindGroup=function(e,t){let r=GlobalGPUContext.get(e).object,o=getPointer(t,C_STRUCT.BindGroupDescriptor),n=GlobalGPUContext.get(o[0]).object,a=o[1],i=getPointer(o[2],C_STRUCT.BindGroupEntry*a),l=[];for(var u=0;u<a;u++){var s=6*u,g={};0!=i[s+1]?g=GlobalGPUContext.get(i[s+1]).object:0!=i[s+2]?g=GlobalGPUContext.get(i[s+2]).object:0!=i[s+3]&&(g.buffer=GlobalGPUContext.get(i[s+3]).object,g.offset=i[s+4],g.size=i[s+5]),l.push({binding:i[s+0],resource:g})}return GlobalGPUContext.register(r.createBindGroup({layout:n,entries:l}))},wgpuReleaseBindGroup=function(e){GlobalGPUContext.release(e)},wgpuQueueWriteBuffer=function(e,t,r,o,n){var a=GlobalGPUContext.get(e).object,i=GlobalGPUContext.get(t).object,l=new Uint8Array(WasmContext.memory).subarray(o,o+n);a.writeBuffer(i,r,l,0,n)},wgpuCreateTexture=function(e,t){let r=GlobalGPUContext.get(e).object,o=getPointer(t,C_STRUCT.TextureDescriptor);return size=[],0===o[5]?size=[o[0]]:1===o[5]?size=[o[0],o[1]]:2===o[5]&&(size=[o[0],o[1],o[2]]),GlobalGPUContext.register(r.createTexture({size:size,mipLevelCount:o[3],sampleCount:o[4],dimension:DimensionName[o[5]],format:TextureFormatName[o[6]],usage:o[7]}))},wgpuQueueCopyExternalImageToTexture=function(e,t,r,o){let n=GlobalGPUContext.get(e).object,a=getPointer(o,12);size=[],a[0]>0&&size.push(a[0]),a[1]>0&&size.push(a[1]),a[2]>0&&size.push(a[2]),n.copyExternalImageToTexture({source:promiseMgr.get(t).promise},{texture:GlobalGPUContext.get(r).object},size)},wgpuCreateSampler=function(e,t){let r=GlobalGPUContext.get(e).object,o=getPointer(t,C_STRUCT.SamplerDescriptor);return GlobalGPUContext.register(r.createSampler({magFilter:FilterMode[o[3]],minFilter:FilterMode[o[4]]}))};var WasmContext={adapterAvailable:!0,deviceAvailable:!0,heapViewu8:0,heapViewu16:0,heapViewu32:0,heapViewf32:0,heapView32:0,heap_max:268435456},GlobalGPUContext={objects:{},currentId:1,register:function(e){let t={};var r=this.currentId++;return t.refcount=1,t.object=e,this.objects[r]=t,r},get:function(e){if(0!==e)return this.objects[e]},reference:function(e){0!==e&&this.objects[e].refcount++},release:function(e){0!==e&&!(this.objects[e].refcount<=0)&&(this.objects[e].refcount--,this.objects[e].refcount<=0&&delete this.objects[e])}};async function initWebGpu(){let e=document.querySelector("canvas");null===e&&console.error("canvas does not exist...");let t=window.innerWidth,r=window.innerHeight;e.width=t,e.height=r;let o=e.getContext("webgpu");GlobalGPUContext.context=o;try{let n=await navigator.gpu.requestAdapter().catch(e=>{WasmContext.adapterAvailable=!1});if(null==n){WasmContext.adapterAvailable=!1;return}return await n.requestDevice()}catch(a){console.log(a),document.getElementById("not_available").style.display="flex",document.querySelector("canvas").style.display="none",document.getElementById("fps").style.display="none",WasmContext.deviceAvailable=!1,abort()}}var getPipelineLayoutDescriptor=function(e){let t=[],r=[];for(var o=0;o<e[0];o++)t.push(GlobalGPUContext.get(getPointer(e[1],1)[0]).object);for(var o=0;o<e[2];o++)r.push(GlobalGPUContext.get(getPointer(e[3],1)[0]).object);return{bindGroupLayouts:t,pushConstantRanges:r}},getVertexBufferLayouts=function(e){var t=[],r=e[4];let o=getPointer(e[5]);for(var n=0;n<r;n++){for(var a=o[n+1],i=getPointer(o[n+2]),l=[],u=0;u<a;u++)l.push({format:VertexFormatName[i[C_STRUCT.VertexAttribute/4*u+0]],offset:i[C_STRUCT.VertexAttribute/4*u+1],shaderLocation:i[C_STRUCT.VertexAttribute/4*u+2]});t.push({arrayStride:o[n+0],attributes:l})}return t},getPipelineCreationInfo=function(e){let t=getPointer(e,C_STRUCT.RenderPipelineDescriptor);return{layout:0==t[0]?"auto":GlobalGPUContext.get(t[0]).object,vertex:{module:t[1],entry_point:getStringFromPointer(t[2],t[3]),buffers:getVertexBufferLayouts(t)},primitive:{topology:PrimitiveTopologyName[t[6]]},fragment:{module:t[32],entry_point:getStringFromPointer(t[33],t[34]),targets:[{format:TextureFormatName[getPointer(t[36],C_STRUCT.ColorTargetState)[0]]}]},depthStencil:{format:TextureFormatName[t[13]],depthWriteEnabled:t[14],depthCompare:CompareFunctionName[t[15]]}}},getColorAttachment=function(e){let t=e[0];for(var r=[],o=getPointer(e[1],C_STRUCT.RenderPassColorAttachment*t),n=0;n<t;n++)getColor(o,4,4),r.push({view:GlobalGPUContext.get(o[0+n]).object,resolve_target:o[1+n],loadOp:LoadOpName[o[2+n]],storeOp:StoreOpName[o[3+n]],clearValue:[ieee32ToFloat(o[4+n]),ieee32ToFloat(o[5+n]),ieee32ToFloat(o[6+n]),ieee32ToFloat(o[7+n])]});return r},getDepthAttachment=function(e){let t=e[2];for(var r={},o=getPointer(e[3],C_STRUCT.RenderPassDepthStencilAttachment*t),n=0;n<t;n++)r={view:GlobalGPUContext.get(o[0+n]).object,depthLoadOp:LoadOpName[o[1+n]],depthStoreOp:StoreOpName[o[2+n]],stencilLoadOp:o[3+n]>=0?LoadOpName[o[3+n]]:void 0,stencilStoreOp:o[4+n]>=0?LoadOpName[o[3+n]]:void 0,depthClearValue:ieee32ToFloat(o[5+n]),stencilClearValue:ieee32ToFloat(o[6+n]),readOnly:o[7+n]};return r},getRenderPassDescriptor=function(e){let t=getPointer(e,C_STRUCT.RenderPassDescriptor),r=getColorAttachment(t),o=0===t[2]?void 0:getDepthAttachment(t);return document.querySelector("canvas"),{colorAttachments:r,depthStencilAttachment:o}},getBufferDescriptor=function(e){let t=getPointer(e,C_STRUCT.BufferDescriptor);return{size:t[0],usage:t[1],mappedAtCreation:t[2]}},getCommands=function(e,t){let r=getPointer(t,RenderPassDescriptorSize);return{colorAttachments:[{view:GlobalGPUContext.get(r[0]).object,clearValue:[r[1],r[2],r[3],r[4]],loadOp:LoadOpName[r[5]],storeOp:StoreOpName[r[6]]}]}};